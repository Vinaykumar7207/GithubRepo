// Generated by Dagger (https://dagger.dev).
package com.example.githubrepoexplorer.data.repository;

import com.example.githubrepoexplorer.data.database.RepoDao;
import com.example.githubrepoexplorer.data.network.GitHubApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class RepoRepository_Factory implements Factory<RepoRepository> {
  private final Provider<GitHubApi> githubApiProvider;

  private final Provider<RepoDao> repoDaoProvider;

  public RepoRepository_Factory(Provider<GitHubApi> githubApiProvider,
      Provider<RepoDao> repoDaoProvider) {
    this.githubApiProvider = githubApiProvider;
    this.repoDaoProvider = repoDaoProvider;
  }

  @Override
  public RepoRepository get() {
    return newInstance(githubApiProvider.get(), repoDaoProvider.get());
  }

  public static RepoRepository_Factory create(Provider<GitHubApi> githubApiProvider,
      Provider<RepoDao> repoDaoProvider) {
    return new RepoRepository_Factory(githubApiProvider, repoDaoProvider);
  }

  public static RepoRepository newInstance(GitHubApi githubApi, RepoDao repoDao) {
    return new RepoRepository(githubApi, repoDao);
  }
}
